server {
    server_name signalcow.domain.tld;

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    #ssl_certificate /etc/letsencrypt/live/signalcow.domain.tld/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/signalcow.domain.tld/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
     ssl_prefer_server_ciphers off;
     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
     ssl_session_cache shared:SSL:10m;
     ssl_session_timeout 1d;
     ssl_session_tickets off;

     add_header X-Frame-Options "SAMEORIGIN" always;
     add_header X-XSS-Protection "1; mode=block" always;
     add_header X-Content-Type-Options "nosniff" always;
     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;


    # API Backend (Port 3002)
    location ~ ^/(api|webhook)/ {
        proxy_pass http://127.0.0.1:3002; 
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  Host $host; 
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect    off;
    }

    location / {
        proxy_pass http://127.0.0.1:3005;

        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  Host $host;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect    off;
        proxy_buffering   off;
    }


     access_log /var/log/nginx/signalcow.domain.tld.access.log;
     error_log /var/log/nginx/signalcow.domain.tld.error.log;
}

server {
    listen 80;
    listen [::]:80;
    server_name signalcow.domain.tld;
    return 301 https://$host$request_uri;
 }